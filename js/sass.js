// Generated by CoffeeScript 1.4.0
(function() {
  var SaSS;

  SaSS = (function() {

    function SaSS(o) {
      o = o || {};
      this.newline = o.newline || "\n";
      this.coffeeStyle = '';
      this.convert = function(s) {
        var self;
        this.lines = s.split(/[\n|\r|\r\n]+/);
        self = this;
        this.lines.forEach(function(v, k, a) {
          if (!v.trim()) {
            return;
          }
          return self.coffeeStyle += self._convert(v.replace(/\s+$/, ''));
        });
        return this.coffeeStyle;
      };
      this._convert = function(s) {
        if (this._isComment(s)) {
          return s + this.newline;
        }
        if (this._isSelector(s)) {
          return this._selector(s);
        } else {
          return this._property(s);
        }
      };
      this._isSelector = function(s) {
        return s.search(/\:\s+[\w\"\'\#\d]+/) === -1 && s.search(/\+/) === -1;
      };
      this._isComment = function(s) {
        return s.search(/\/+|\*/) > -1;
      };
      this._selector = function(s) {
        return s.replace(/(\s*)(.*)$/, "$1s '$2', ->" + this.newline);
      };
      this._property = function(s) {
        var c, p;
        if (s.search(/\+/) > -1) {
          return "" + (s.replace(/\"/g, '\'').replace(/\+/, '').replace(/\(/, ' ').replace(/\$/, '').replace(/\)/, '').replace(/\-/, '_')) + this.newline;
        } else {
          c = s.split(':');
          p = c[0].replace('-', '_');
          return "" + p + " '" + (c[1].replace(/^\s*/, '').replace(/\'/g, '\"')) + "'" + this.newline;
        }
      };
    }

    return SaSS;

  })();

  exports.getSaSS = function(o) {
    return new SaSS(o);
  };

}).call(this);
